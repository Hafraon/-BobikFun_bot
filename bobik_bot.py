import requests
import asyncio
import random
import logging
from telegram import Bot
from telegram.ext import Application, CommandHandler

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class BobikBot:
    def __init__(self):
        self.bot_token = "7882259321:AAGGqql6LD6bzLHTOb1HdKUYs2IJBZqsd6E"
        self.channel_id = "@BobikFun"
        self.stats = {'posts': 0}
        
        # –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ø—ñ–¥–ø–∏—Å–∏
        self.captions = [
            "üêï –ë–æ–±—ñ–∫ –∑–Ω–∞–π—à–æ–≤ —â–æ—Å—å —Å–º—ñ—à–Ω–µ!",
            "üòÇ –¶–µ —Ç—Ä–µ–±–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ–º!",
            "üî• –°–≤—ñ–∂–∏–π –≥—É–º–æ—Ä –≤—ñ–¥ –ë–æ–±—ñ–∫–∞!",
            "üòÑ –•–æ—Ä–æ—à–∏–π –Ω–∞—Å—Ç—Ä—ñ–π –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∏–π!",
            "üéØ –ë–æ–±—ñ–∫ –Ω–µ –ø—Ä–æ–º–∞—Ö–Ω—É–≤—Å—è!"
        ]

    def get_meme(self):
        """–û—Ç—Ä–∏–º—É—î –º–µ–º –∑ —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª"""
        # –°–ø–∏—Å–æ–∫ API –¥–ª—è –º–µ–º—ñ–≤
        apis = [
            "https://meme-api.herokuapp.com/gimme",
            "https://meme-api.herokuapp.com/gimme/dankmemes", 
            "https://meme-api.herokuapp.com/gimme/memes",
            "https://meme-api.herokuapp.com/gimme/wholesomememes",
            "https://meme-api.herokuapp.com/gimme/ProgrammerHumor"
        ]
        
        for api_url in apis:
            try:
                response = requests.get(api_url, timeout=10)
                if response.status_code == 200:
                    data = response.json()
                    
                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                    if data.get('url'):
                        url = data['url']
                        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ–æ—Ä–º–∞—Ç
                        if any(ext in url.lower() for ext in ['.jpg', '.jpeg', '.png', '.gif']):
                            # –ó–Ω–∏–∂—É—î–º–æ –≤–∏–º–æ–≥–∏ –¥–æ upvotes
                            ups = data.get('ups', 0)
                            if ups >= 10:  # –ó–Ω–∏–∑–∏–≤ –∑ 100 –¥–æ 10
                                return {
                                    'url': url,
                                    'title': data.get('title', ''),
                                    'ups': ups
                                }
                            # –Ø–∫—â–æ upvotes –Ω–∏–∑—å–∫—ñ, –∞–ª–µ –º–µ–º —î - –≤—Å–µ –æ–¥–Ω–æ –±–µ—Ä–µ–º–æ
                            elif url:
                                return {
                                    'url': url,
                                    'title': data.get('title', '–ë–µ–∑–Ω–∞–∑–≤–∏ –º–µ–º'),
                                    'ups': ups
                                }
                                
            except Exception as e:
                logger.error(f"–ü–æ–º–∏–ª–∫–∞ API {api_url}: {e}")
                continue
                
        # –Ø–∫—â–æ –∂–æ–¥–µ–Ω API –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–≤ - fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ–º
        logger.warning("–í—Å—ñ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é fallback –º–µ–º")
        return {
            'url': 'https://i.imgflip.com/1bij.jpg',  # –ó–Ω–∞–º–µ–Ω–∏—Ç–∏–π Success Kid –º–µ–º
            'title': 'Fallback –º–µ–º - –∫–æ–ª–∏ API –Ω–µ –ø—Ä–∞—Ü—é—é—Ç—å!',
            'ups': 9999
        }


    async def start_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        await update.message.reply_text(
            "üêï –ü—Ä–∏–≤—ñ—Ç! –Ø –ë–æ–±—ñ–∫!\n\n"
            "üéØ –ü—É–±–ª—ñ–∫—É—é –º–µ–º–∏ –≤ @BobikFun\n\n"
            "–ö–æ–º–∞–Ω–¥–∏:\n"
            "/meme - –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–µ–º\n"
            "/test - –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤ –∫–∞–Ω–∞–ª\n"
            "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
        )

    async def meme_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ /meme"""
        await update.message.reply_text("üîç –®—É–∫–∞—é –º–µ–º...")
        
        meme = self.get_meme()
        if meme:
            caption = f"{random.choice(self.captions)}\n\nüí≠ {meme['title']}"
            await update.message.reply_photo(photo=meme['url'], caption=caption)
        else:
            await update.message.reply_text("üòî –ù–µ –∑–Ω–∞–π—à–æ–≤ –º–µ–º—É, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!")

    async def test_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ /test - –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è –≤ –∫–∞–Ω–∞–ª"""
        await update.message.reply_text("üß™ –ü—É–±–ª—ñ–∫—É—é —Ç–µ—Å—Ç–æ–≤–∏–π –º–µ–º –≤ –∫–∞–Ω–∞–ª...")
        
        meme = self.get_meme()
        if not meme:
            await update.message.reply_text("‚ùå –ù–µ –∑–Ω–∞–π—à–æ–≤ –º–µ–º—É!")
            return
            
        try:
            caption = f"{random.choice(self.captions)}\n\nüí≠ {meme['title']}"
            bot = Bot(token=self.bot_token)
            
            result = await bot.send_photo(
                chat_id=self.channel_id,
                photo=meme['url'],
                caption=caption
            )
            
            self.stats['posts'] += 1
            
            await update.message.reply_text(
                f"‚úÖ –ú–µ–º –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª!\n"
                f"üîó https://t.me/BobikFun/{result.message_id}"
            )
            
        except Exception as e:
            await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")

    async def stats_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ /stats"""
        await update.message.reply_text(
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–æ–±—ñ–∫–∞:\n"
            f"üìà –û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {self.stats['posts']}\n"
            f"üîó –ö–∞–Ω–∞–ª: @BobikFun"
        )

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    bot = BobikBot()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
    application = Application.builder().token(bot.bot_token).build()
    
    # –î–æ–¥–∞—î–º–æ –∫–æ–º–∞–Ω–¥–∏
    application.add_handler(CommandHandler("start", bot.start_command))
    application.add_handler(CommandHandler("meme", bot.meme_command))
    application.add_handler(CommandHandler("test", bot.test_command))
    application.add_handler(CommandHandler("stats", bot.stats_command))
    
    logger.info("üöÄ –ë–æ–±—ñ–∫ –∑–∞–ø—É—â–µ–Ω–∏–π!")
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
